definitions:
  subscription.SubscribeReqBody:
    properties:
      city:
        type: string
      email:
        type: string
      frequency:
        enum:
        - hourly
        - daily
        type: string
    required:
    - city
    - email
    - frequency
    type: object
  weather.Weather:
    properties:
      description:
        type: string
      humidity:
        type: number
      temperature:
        type: number
    type: object
info:
  contact: {}
  description: Weather API application that allows users to subscribe to weather updates
    for their city.
  title: Weather Forecast API
  version: "1.0"
paths:
  /api/subscribe:
    post:
      consumes:
      - application/json
      description: Subscribes an email to weather updates for a specific city with
        the given frequency.
      parameters:
      - description: SubscribeReqBody
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/subscription.SubscribeReqBody'
      - description: Email address to subscribe
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: City for weather updates
        in: body
        name: city
        required: true
        schema:
          type: string
      - description: Update frequency (daily or hourly)
        in: body
        name: frequency
        required: true
        schema:
          type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Subscription successful. Confirmation email sent.
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "409":
          description: Subscription already exists
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Subscribe to weather updates
      tags:
      - subscription
  /api/subscription/confirm/{token}:
    get:
      description: Confirms a subscription using the token sent in the confirmation
        email.
      parameters:
      - description: Confirmation token
        in: path
        name: token
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Subscription confirmed successfully
          schema:
            type: string
        "400":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
      summary: Confirm email subscription
      tags:
      - subscription
  /api/subscription/unsubscribe/{token}:
    get:
      description: Unsubscribes an email from weather updates using the token sent
        in emails.
      parameters:
      - description: Unsubscribe token
        in: path
        name: token
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Unsubscribed successfully
          schema:
            type: string
        "400":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Token not found
          schema:
            type: string
      summary: Unsubscribe from weather updates
      tags:
      - subscription
  /api/weather:
    get:
      consumes:
      - application/json
      description: Returns the current weather forecast for the specified city using
        WeatherAPI.com.
      parameters:
      - description: City name for weather forecast
        in: query
        name: city
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation - current weather forecast returned
          schema:
            $ref: '#/definitions/weather.Weather'
        "400":
          description: Invalid request
          schema:
            type: string
        "404":
          description: City not found
          schema:
            type: string
      summary: Get current weather for a city
      tags:
      - weather
swagger: "2.0"
